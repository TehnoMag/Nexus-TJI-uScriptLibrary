MACHINE "uSL/Class/System"

	#include "uSL/class/declaration"
	
	RULE	event __Constructor
		#include "uSL/function/private"
		:action
		
			_tjiObject := 0;
			_tjilist := 0;
			_usllist := 0;
		
		:end
	END
	
	RULE	event __var
		:action
		
			if (!E.flag, E.flag := #uSL_CLASS_SETGET);
			
			_tjiObject := this:localEvent(__instvar, E.flag := P.flag; E.id := 1; E.value := _tjiObject);
			_tjilist := this:localEvent(__instvar, E.flag := P.flag; E.id := 2; E.value := _tjilist);
			_usllist := this:localEvent(__instvar, E.flag := P.flag; E.id := 3; E.value := _usllist);
		
		:end
	END
	
	RULE	event RemoveMoons
		#include "uSL/function/private"
		:action
		
			E.temp := getFreeSel();
			
			uSelect(E.temp, E.planet, S:celestial());
			subList(_tjilist, E.temp);
			Empty(E.temp);
		
		:end
	END
	
	RULE	event CreatePlanet
		#include "uSL/function/private"
		:action
		
			E.planet_ref := U.uSL.Class:localEvent(New, E.class := "Planet");
			E.planet_cls := U.uSL.Class:last;
			E.planet_cls:localEvent(Create, E.ref := P.planet_ref; E.planet := P.planet; E.Parent_Class := C.this; E.Parent_ref := __instance);
			
			setN(_usllist, indexOf(_tjilist, E.planet), E.planet_ref);
		:end
	END
		
	RULE	event Create
		#include "uSL/class/instance"
		:action
			
			_tjiObject := E.system;
			
			//find all celestial objects in current system
			_tjilist := getFreeSel();
			uSelect(_tjilist, _tjiObject, S:celestial());
			//Delete Star from list
			RemoveFirst(_tjilist);
			
			//Remove moons
			ExecList
			(
				_tjilist,
					this:localEvent(RemoveMoons, E.planet := S.this);
			);
			
			_usllist := getFreeSel();
				DIM(_usllist, numof(_tjilist));
			
			ExecList
			(
				_tjilist,
					this:localEvent(CreatePlanet, E.planet := S.this);
			);
			
		:end
		#include "uSL/class/end_instance"
	END
	
	RULE	event getPlanet
		#include "uSL/class/instance"
		:action
		
			E._tjiplanet := uGet(E.planet);
			E.id := indexOf(_tjilist, E._tjiplanet);
			Return(getN(_usllist, E.id));
		
		:end
	END
	
	#include "uSL/class/end"

END